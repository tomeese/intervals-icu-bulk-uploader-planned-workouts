name: daily-summary

on:
  schedule:
    # 06:00 UTC daily ≈ ~10–11pm Pacific (end-of-day vibe; DST handled)
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  daily:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install project
        run: pip install -e .

      - name: Generate daily summary
        env:
          INTERVALS_API_KEY: ${{ secrets.INTERVALS_API_KEY }}
        run: icu-daily-summary --athlete-id 0 --tz America/Los_Angeles --outdir reports/daily --types "Ride,Gravel Ride,Virtual Ride"
        
      - name: Commit report if changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add reports/daily
            git commit -m "chore: add daily summary [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Read latest daily JSON & derive env
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          LATEST_JSON=$(ls -1t reports/daily/daily-*.json | head -n1)
          BASE="${LATEST_JSON%.json}"
          DATE=$(jq -r .date "$LATEST_JSON")
          PLANNED_TSS=$(jq -r .summary.planned_tss "$LATEST_JSON")
          ACTUAL_TSS=$(jq -r .summary.actual_tss "$LATEST_JSON")
          DELTA_TSS=$(jq -r .summary.delta_tss "$LATEST_JSON")
          PLANNED_TIME=$(jq -r .summary.planned_time_hms "$LATEST_JSON")
          ACTUAL_TIME=$(jq -r .summary.actual_time_hms "$LATEST_JSON")
          CTL=$(jq -r .advice.ctl "$LATEST_JSON")
          ATL=$(jq -r .advice.atl "$LATEST_JSON")
          TSB=$(jq -r .advice.tsb "$LATEST_JSON")
          RAMP=$(jq -r .advice.ramp "$LATEST_JSON")
          REC=$(jq -r .advice.recommendation "$LATEST_JSON")
          TOM_PLAN=$(jq -r .advice.tomorrow_planned_tss "$LATEST_JSON")
          TOM_SUGG=$(jq -r .advice.tomorrow_suggested_tss "$LATEST_JSON")
          ALERT_SUBJ=$(jq -r '.alerts.subject_tag // ""' "$LATEST_JSON")
          ALERT_FLAGS=$(jq -r '.alerts.flags // [] | join("; ")' "$LATEST_JSON")

          {
            echo "LATEST_JSON=$LATEST_JSON"
            echo "BASE=$BASE"
            echo "DATE=$DATE"
            echo "PLANNED_TSS=$PLANNED_TSS"
            echo "ACTUAL_TSS=$ACTUAL_TSS"
            echo "DELTA_TSS=$DELTA_TSS"
            echo "PLANNED_TIME=$PLANNED_TIME"
            echo "ACTUAL_TIME=$ACTUAL_TIME"
            echo "CTL=$CTL"
            echo "ATL=$ATL"
            echo "TSB=$TSB"
            echo "RAMP=$RAMP"
            echo "REC=$REC"
            echo "TOM_PLAN=$TOM_PLAN"
            echo "TOM_SUGG=$TOM_SUGG"
            echo "ALERT_SUBJ=$ALERT_SUBJ"
            echo "ALERT_FLAGS=$ALERT_FLAGS"
            if [ -n "$ALERT_SUBJ" ]; then
              echo "ALERT_PREFIX=[ALERT $ALERT_SUBJ] "
            else
              echo "ALERT_PREFIX="
            fi
          } >> "$GITHUB_ENV"
      - name: Generate Zwift workouts for tomorrow (indoors only)
        shell: bash
        env:
          INTERVALS_API_KEY: ${{ secrets.INTERVALS_API_KEY }}
        run: |
          set -euo pipefail
          # LA time tomorrow (runner = UTC). We just use date arithmetic; Intervals uses local dates.
          TOM=$(date -u -d "+1 day" +"%Y-%m-%d")
          icu-make-zwo --athlete-id 0 --tz America/Los_Angeles --oldest "$TOM" --newest "$TOM" --outdir zwift
          ls -1 zwift || true

      - name: Email daily report
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.GMAIL_USER }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: "${{ env.ALERT_PREFIX }}Daily Intervals: ${{ env.DATE }}  TSS ${{ env.ACTUAL_TSS }} (plan ${{ env.PLANNED_TSS }})  CTL ${{ env.CTL }} ATL ${{ env.ATL }} TSB ${{ env.TSB }}"
          to: ${{ secrets.REPORT_TO }}
          from: "Intervals Bot <${{ secrets.GMAIL_USER }}>"
          body: |
            Date:       ${{ env.DATE }}
            TSS:        ${{ env.ACTUAL_TSS }}  (plan ${{ env.PLANNED_TSS }}, Δ ${{ env.DELTA_TSS }})
            Time:       ${{ env.ACTUAL_TIME }} (plan ${{ env.PLANNED_TIME }})
            Fitness:    CTL ${{ env.CTL }} | ATL ${{ env.ATL }} | TSB ${{ env.TSB }} | Ramp ${{ env.RAMP }}

            Red flags:
            ${{ env.ALERT_FLAGS }}

            Coach's note:
            ${{ env.REC }}

            Tomorrow: planned ${{ env.TOM_PLAN }} -> suggested ${{ env.TOM_SUGG }}
          attachments: |
            ${{ env.BASE }}.md
            ${{ env.BASE }}-summary.csv
            ${{ env.BASE }}-sessions.csv
            zwift/*.zwo