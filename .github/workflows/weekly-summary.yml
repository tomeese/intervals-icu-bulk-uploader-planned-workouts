name: Weekly Intervals Summary

on:
  workflow_dispatch:
    inputs:
      for_date:
        description: "Week ending Sunday (YYYY-MM-DD). If empty, uses last Sunday in America/Los_Angeles."
        required: false
        type: string
      types:
        description: "Comma-separated activity types"
        required: false
        default: "Ride,Gravel Ride,Virtual Ride"
        type: string
  schedule:
    # 07:30 UTC every Monday ≈ Sunday 23:30 America/Los_Angeles during PDT
    - cron: "30 7 * * 1"

permissions:
  contents: write

env:
  ATHLETE: 0
  TZSTR: America/Los_Angeles
  TYPES: 'Ride,Gravel Ride,Virtual Ride'  # default; can be overridden via workflow_dispatch

jobs:
  weekly:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          python -c "import intervals_icu_uploader.weekly_summary as m; print('weekly_summary import OK')"
   
      - name: Fetch weekly plan JSON
        shell: bash
        run: |
            set -euo pipefail
            MON=$(python - <<'PY'
            import datetime as dt
            today = dt.date.today()
            monday = today - dt.timedelta(days=today.weekday())  # 0=Mon
            print(monday.isoformat())
            PY
                )
            curl -fL "https://raw.githubusercontent.com/tomeese/intervals-icu-bulk-uploader-planned-workouts/main/plans/plan-${MON}.json" -o plan.json
            jq . plan.json

      - name: Determine Sunday (America/Los_Angeles)
        id: when
        shell: bash
        env:
          INPUT_FOR_DATE: ${{ github.event.inputs.for_date }}
        run: |
          set -euo pipefail
          if [ -n "${INPUT_FOR_DATE:-}" ]; then
            SUNDAY="${INPUT_FOR_DATE}"
          else
            python - <<'PY' >> "$GITHUB_OUTPUT"
            import os, datetime as dt
            from zoneinfo import ZoneInfo
            tz = ZoneInfo(os.environ.get("TZSTR","America/Los_Angeles"))
            today = dt.datetime.now(tz).date()
            dow = today.weekday()              # Mon=0..Sun=6
            sunday = today if dow==6 else today - dt.timedelta(days=dow+1)
            print(f"sunday={sunday.isoformat()}")
            PY
            SUNDAY="${{ steps.when.outputs.sunday }}"
          fi
          echo "sunday=${SUNDAY}" >> "$GITHUB_OUTPUT"
          echo "SUNDAY=${SUNDAY}" >> "$GITHUB_ENV"
          echo "BASE=reports/weekly/weekly-${SUNDAY}" >> "$GITHUB_ENV"
          echo "TYPES_EFF=${{ github.event.inputs.types || env.TYPES }}" >> "$GITHUB_ENV"

      - name: Generate weekly summary
        env:
          INTERVALS_API_KEY: ${{ secrets.INTERVALS_API_KEY }}
        run: |
          set -euo pipefail
          mkdir -p reports/weekly
          icu-weekly-summary \
            --athlete-id "${ATHLETE}" \
            --tz "${TZSTR}" \
            --outdir reports/weekly \
            --for-date "${SUNDAY}" \
            --types "${TYPES_EFF}"

      - name: Inspect outputs
        run: |
          echo "Generated files for ${SUNDAY}:"
          ls -l reports/weekly | sed -n '1,200p'
          echo
          echo "Preview (first 40 lines) ${BASE}.md:"
          sed -n '1,40p' "${BASE}.md" || true

      - name: Commit weekly reports
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage only this week's files (safe if they already exist)
          git add -A "${BASE}.md" "${BASE}-summary.csv" "${BASE}-sessions.csv" "${BASE}-bytype.csv" "${BASE}.json" || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(reports): weekly ${SUNDAY} (types: ${TYPES_EFF})"
            git push
          fi

      - name: Email weekly report (optional)
        if: ${{ secrets.MAIL_HOST != '' && secrets.MAIL_TO != '' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_HOST }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Weekly Intervals Summary – ${{ env.SUNDAY }} (types: ${{ env.TYPES_EFF }})"
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_FROM }}
          content_type: text/html
          html_body: |
            <p>Weekly report for <b>${{ env.SUNDAY }}</b> (types: ${{ env.TYPES_EFF }}).</p>
            <p>See attachments for Markdown summary, per-session CSV, by-type CSV, and raw JSON.</p>
          attachments: |
            ${{ env.BASE }}.md
            ${{ env.BASE }}-summary.csv
            ${{ env.BASE }}-sessions.csv
            ${{ env.BASE }}-bytype.csv
            ${{ env.BASE }}.json
