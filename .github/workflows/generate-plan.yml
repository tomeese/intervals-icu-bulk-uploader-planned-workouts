name: Generate Intervals Plan
on:
  workflow_dispatch:
    inputs:
      start:
        description: "Start date (YYYY-MM-DD)"
        required: true
      end:
        description: "End date (YYYY-MM-DD)"
        required: true
      intent:
        description: "build-week | recovery-week | race-week"
        required: true
        default: "recovery-week"
      longride_weather:
        description: "dry | rain | mixed | auto"
        required: false
        default: "auto"
      season_hint:
        description: "summer | shoulder | winter (used if weather=auto/missing)"
        required: false
        default: ""
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  issues: read

jobs:
  plan:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issues' &&
       contains(github.event.issue.labels.*.name, 'generate-plan'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Install deps
        run: npm i ajv

      - name: Inject build env
        run: |
          echo "VITE_GH_OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "VITE_GH_REPO=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Compute inputs
        id: inputs
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "start=${{ inputs.start }}" >> $GITHUB_OUTPUT
            echo "end=${{ inputs.end }}" >> $GITHUB_OUTPUT
            echo "intent=${{ inputs.intent }}" >> $GITHUB_OUTPUT
            echo "longride_weather=${{ inputs.longride_weather }}" >> $GITHUB_OUTPUT
            echo "season_hint=${{ inputs.season_hint }}" >> $GITHUB_OUTPUT
            echo "monday_rest=${{ inputs.monday_rest }}" >> $GITHUB_OUTPUT
            echo "notes=" >> $GITHUB_OUTPUT
          else
            body="${{ github.event.issue.body }}"
            start=$(grep -iE '^\s*start:\s*' <<< "$body" | head -1 | awk -F: '{gsub(/^[[:space:]]*/,"",$2); print $2}')
            end=$(grep -iE '^\s*end:\s*' <<< "$body" | head -1 | awk -F: '{gsub(/^[[:space:]]*/,"",$2); print $2}')
            intent=$(grep -iE '^\s*intent:\s*' <<< "$body" | head -1 | awk -F: '{gsub(/^[[:space:]]*/,"",$2); print $2}')
            lrw=$(grep -iE '^\s*longride_weather:\s*' <<< "$body" | head -1 | awk -F: '{gsub(/^[[:space:]]*/,"",$2); print $2}')
            shint=$(grep -iE '^\s*season_hint:\s*' <<< "$body" | head -1 | awk -F: '{gsub(/^[[:space:]]*/,"",$2); print $2}')
            mrest=$(grep -iE '^\s*monday_rest:\s*' <<< "$body" | head -1 | awk -F: '{gsub(/^[[:space:]]*/,"",$2); print $2}')
            # Capture fenced notes block after a line 'notes:' delimited by ```
            notes=$(awk '/^ *notes: *$/{flag=1;next} flag&&/^```$/{flag=0;exit} flag{print}' <<< "$body")
            echo "start=$start" >> $GITHUB_OUTPUT
            echo "end=$end" >> $GITHUB_OUTPUT
            echo "intent=${intent:-recovery-week}" >> $GITHUB_OUTPUT
            echo "longride_weather=${lrw:-auto}" >> $GITHUB_OUTPUT
            echo "season_hint=$shint" >> $GITHUB_OUTPUT
            echo "monday_rest=${mrest:-true}" >> $GITHUB_OUTPUT
            printf "notes<<EOF\n%s\nEOF\n" "$notes" >> $GITHUB_OUTPUT
          fi

      - name: Generate plan
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          START: ${{ steps.inputs.outputs.start }}
          END: ${{ steps.inputs.outputs.end }}
          INTENT: ${{ steps.inputs.outputs.intent }}
          LONGRIDE_WEATHER: ${{ steps.inputs.outputs.longride_weather }}
          SEASON_HINT: ${{ steps.inputs.outputs.season_hint }}
          MONDAY_REST: ${{ steps.inputs.outputs.monday_rest }}
          NOTES: ${{ steps.inputs.outputs.notes }}
        run: node scripts/generate-plan.mjs

      - name: Commit plan
        run: |
          git config user.name "gh-actions"
          git config user.email "actions@users.noreply.github.com"
          git add plans/*
          git commit -m "plan: ${START}..${END} (${INTENT}) [weather=${LONGRIDE_WEATHER:-auto}${SEASON_HINT:+, season=${SEASON_HINT}}]" || echo "No changes"
          git push
