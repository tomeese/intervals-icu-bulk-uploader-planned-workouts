# File: .github/workflows/publish-draft.yml
name: Publish Draft Plan

on:
  # Only when the special label is applied, or via manual dispatch
  issues:
    types: [labeled]
  workflow_dispatch:
    inputs:
      draft_path:
        description: "Draft file to publish (plans/drafts/START_END.json)"
        required: true

permissions:
  contents: write
  issues: write

concurrency:
  group: publish-draft-${{ github.event.issue.number || github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issues' &&
       github.event.action == 'labeled' &&
       github.event.label.name == 'publish-draft')
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Figure draft path & target
        id: p
        uses: actions/github-script@v7
        with:
          script: |
            function kv(name) {
              const body = context.payload.issue?.body || '';
              const re = new RegExp(`(?:^|\\n)\\s*${name}:\\s*(.+)$`, 'im');
              const m = re.exec(body);
              return m ? m[1].trim() : '';
            }
            let draft = (core.getInput('draft_path') || '').trim();
            if (!draft && context.eventName === 'issues') {
              draft = kv('draft_path');
            }
            if (!draft) core.setFailed('draft_path is required');
            const m = draft.match(/(\d{4}-\d{2}-\d{2})_(\d{4}-\d{2}-\d{2})/);
            const target = m ? `plans/${m[1]}_${m[2]}.json` : draft.replace(/^plans\/drafts\//,'plans/');
            core.setOutput('draft', draft);
            core.setOutput('target', target);

      - name: Move draft to final and push
        shell: bash
        env:
          SRC: ${{ steps.p.outputs.draft }}
          DST: ${{ steps.p.outputs.target }}
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          mkdir -p "$(dirname "$DST")"
          if [ ! -f "$SRC" ]; then
            echo "Draft not found: $SRC"; exit 1
          fi

          git mv -f "$SRC" "$DST" || { cp -f "$SRC" "$DST"; git add "$DST"; git rm -f "$SRC" || true; }

          git commit -m "Publish plan: $DST"
          n=0
          until [ $n -ge 4 ]; do
            if git pull --rebase --autostash origin "${GITHUB_REF#refs/heads/}"; then
              if git push origin "HEAD:${GITHUB_REF#refs/heads/}"; then
                echo "Pushed"; break
              fi
            fi
            n=$((n+1)); sleep $((2 ** n))
          done
          [ $n -lt 4 ]

      - name: Comment & close the issue
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        env:
          DST: ${{ steps.p.outputs.target }}
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const dst   = process.env.DST;
            const ref   = (context.ref || '').replace('refs/heads/','') || context.payload.repository?.default_branch || 'main';
            const url   = `https://github.com/${owner}/${repo}/blob/${ref}/${dst}`;
            await github.rest.issues.createComment({
              owner, repo, issue_number: context.issue.number,
              body: `ðŸš€ Published plan to \`${dst}\`. \n\n[View file](${url})`
            });
            await github.rest.issues.update({ owner, repo, issue_number: context.issue.number, state: 'closed' });
